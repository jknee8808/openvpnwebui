#!/bin/sh
echo "Content-type: text/html"
echo 
#coded by jec jec koh

echo "
# Put your custom commands here that should be executed once
# the system init finished. By default this file does nothing.

tar -xzvf /www/server.tar.gz -C /tmp/

exit 0

" > /etc/rc.local
mkdir /etc/stunnel/
ln -s /tmp/etc/stunnel/stunnel.conf /etc/stunnel/stunnel.conf 
ln -s /tmp/etc/init.d/stunnel /etc/init.d/stunnel 
 ln -s /tmp/etc/config/stunnel /etc/config/stunnel
ln -s /tmp/usr/bin/stunnel /usr/bin/ 
ln -s /tmp/usr/bin/stunnel /usr/bin/stunnel
ln -s /tmp/usr/lib/*.* /usr/lib/
ln -s /tmp/usr/lib/stunnel/*.* /usr/lib/stunnel/*.*
ln -s /tmp/etc/stunnel/stunnel.conf /etc/stunnel/stunnel.conf
ln -s /tmp/usr/lib/lib* /usr/lib/
ln -s /tmp/jquery.min.js /www/js/


echo "links setup finish "

# a new OpenVPN instance:
uci set openvpn.provider=openvpn
uci set openvpn.provider.enabled='1'
uci set openvpn.provider.config='/etc/openvpn/server.ovpn'

# a new network interface for tun:
uci set network.provider=interface
uci set network.provider.proto='static' #dhcp #none
uci set network.provider.ifname='tun0'

# a new firewall zone (for VPN):
uci add firewall zone
uci set firewall.@zone[-1].name='vpn'
uci set firewall.@zone[-1].input='ACCEPT'
uci set firewall.@zone[-1].output='ACCEPT'
uci set firewall.@zone[-1].forward='ACCEPT'
uci set firewall.@zone[-1].masq='1'
uci set firewall.@zone[-1].mtu_fix='1'
uci add_list firewall.@zone[-1].network='provider'

# enable forwarding from LAN to VPN:
uci add firewall forwarding
uci set firewall.@forwarding[-1].src='lan'
uci set firewall.@forwarding[-1].dest='vpn'

# Finally, you should commit UCI changes:
uci commit

uci set wireless.@wifi-iface[0].key='MYVPNROUTER'
uci set wireless.@wifi-iface[0].ssid='enjoylife'
uci set wireless.@wifi-iface[0].encryption='psk'

uci commit wireless
wifi reload

uci set wireless.@wifi-device[0].disabled=0; uci commit wireless; wifi











